"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[31],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>f});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),p=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=p(e.components);return r.createElement(c.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),d=p(n),m=o,f=d["".concat(c,".").concat(m)]||d[m]||u[m]||a;return n?r.createElement(f,i(i({ref:t},l),{},{components:n})):r.createElement(f,i({ref:t},l))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[d]="string"==typeof e?e:o,i[1]=s;for(var p=2;p<a;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8558:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>p});var r=n(7462),o=(n(7294),n(3905));const a={sidebar_position:2,slug:"write-ops",description:"Funamots write ops",title:"Write Operations"},i="Write Operations",s={unversionedId:"operations/write",id:"operations/write",title:"Write Operations",description:"Funamots write ops",source:"@site/docs/operations/write.md",sourceDirName:"operations",slug:"/operations/write-ops",permalink:"/funamots/operations/write-ops",draft:!1,editUrl:"https://github.com/mtranter/funamots/tree/main/docs/docs/operations/write.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,slug:"write-ops",description:"Funamots write ops",title:"Write Operations"},sidebar:"tutorialSidebar",previous:{title:"Read Operations",permalink:"/funamots/operations/read-ops"},next:{title:"Table Definition",permalink:"/funamots/category/table-definition"}},c={},p=[{value:"PUT",id:"put",level:2},{value:"Simple Put",id:"simple-put",level:3},{value:"Conditional Put",id:"conditional-put",level:3},{value:"Set",id:"set",level:3},{value:"Transactional Writes",id:"transactional-writes",level:3}],l={toc:p},d="wrapper";function u(e){let{components:t,...n}=e;return(0,o.kt)(d,(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"write-operations"},"Write Operations"),(0,o.kt)("h2",{id:"put"},"PUT"),(0,o.kt)("h3",{id:"simple-put"},"Simple Put"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"\nimport { tableBuilder } from 'funamots';\n\ntype Order {\n    accountId: string\n    orderId: string\n    orderTotal: number\n    orderDate: number\n    etag: string\n}\n\nconst table = tableBuilder<Order>('Orders')\n                .withKey('accountId', 'orderId')\n                .build();\n\n\nfunction addOrder(order: Order): Promise<void> {\n  await table.put(o)\n}\n")),(0,o.kt)("h3",{id:"conditional-put"},"Conditional Put"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"function updateOrder(order: Order, etag: string): Promise<void> {\n  await table.put(o, {\n    conditionExpression: {\n      etag: { '=': etag },\n    },\n  });\n}\n")),(0,o.kt)("h3",{id:"set"},"Set"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"\nawait table.set({ accountId: 'account-123'; orderId: 'order-1234' }, {\n  orderTotal: 17\n});\n\n")),(0,o.kt)("p",null,"Set also supports the conditionExpression option."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"\nawait table.set({ accountId: 'account-123'; orderId: 'order-1234' }, {\n  orderTotal: 17\n}, {\n    conditionExpression: {\n      etag: { '=': 'consistency-id' },\n    },\n  });\n\n")),(0,o.kt)("h3",{id:"transactional-writes"},"Transactional Writes"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"await table.transactWrite({\n  deletes: [\n    {\n      item: {\n        accountId: 'account-d1',\n        orderId: 'order-d1',\n      },\n    },\n    {\n      item: {\n        accountId: 'account-d2',\n        orderId: 'order-d2',\n      },\n    },\n  ],\n  puts: [\n    {\n      item: {\n        accountId: 'a-123',\n        orderId: 'o-456',\n        orderTotal: 500,\n        orderDate: Date.now();\n      },\n    },\n  ],\n  updates: [\n    {\n      key: {\n        accountId: 'account-u1',\n        orderId: 'order-u1',\n      },\n      updates: {\n        orderTotal: 7.50,\n      },\n      conditionExpression: {\n        etag: { '=': 'consistency-id' },\n      },\n    },\n  ],\n});\n")))}u.isMDXComponent=!0}}]);